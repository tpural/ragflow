# Ragflow Helm Chart Configuration

# -- Override the name for the selector labels, defaults to the chart name
nameOverride: "ragflow"

# -- Override the full name of the deployed resources, defaults to a combination of the release name and the name for the selector labels
fullnameOverride: "ragflow"

# Core ragflow configuration
ragflow:
  timezone: "Asia/Shanghai"

  components:
    blob-store:
      # -- The type of storage to use. (azure, minio, s3)
      type: "minio" 
      minio:
        deploy: true
        config:
          user: '${MINIO_USER:-rag_flow}'
          password: '${MINIO_PASSWORD:-infini_rag_flow}'
          host: '${MINIO_HOST:-minio}:9000'
        deployConfig:
          image:
            repository: quay.io/minio/minio
            tag: RELEASE.2023-12-20T01-00-02Z
          storage:
            className:
            capacity: 5Gi
          deployment:
            strategy:
            resources:
          service:
            type: ClusterIP

      s3:
        config:
          access_key: 'access_key'
          secret_key: 'secret_key'
          region: 'region'
          endpoint_url: 'endpoint_url'
          bucket: 'bucket'
          prefix_path: 'prefix_path'
          signature_version: 'v4'
          addressing_style: 'path'
      azure:
        config:
          auth_type: 'sas'
          container_url: 'container_url'
          sas_token: 'sas_token'
    
    doc-engine:
      # -- The type of doc engine to use. (infinity, elasticsearch)
      type: "infinity"
      infinity:
        deploy: true
        config:
          uri: "uri"
          db_name: "db_name"
        deployConfig:
          uri: "uri"
          db_name: "db_name"
          image:
            repository: infiniflow/infinity
            tag: v0.6.0-dev3
          storage:
            className:
            capacity: 5Gi
      elasticsearch:
        deploy: true
        config:
          host: "elasticsearch-host"
          username: "elasticsearch-username"
          password: "elasticsearch-password"
        deployConfig:
          storage:
            className:
            capacity: 20Gi
          deployment:
            strategy:
            resources:
              requests:
                cpu: "4"
                memory: "16Gi"
          service:
            type: ClusterIP
      opensearch:
        config:
          host: "opensearch-host"
          username: "opensearch-username"
          password: "opensearch-password"

    cache:
      # -- The type of cache to use. (redis)
      type: "redis"
      deploy: true
      config:
        db: 1
        password: "redis-password"
        host: "redis-host"
      deployConfig:
        redis:
          image:
            repository: valkey/valkey
            tag: 8
          storage:
            className:
            capacity: 5Gi
          persistence:
            enabled: true
          deployment:
            strategy:
            resources:
          service:
            type: ClusterIP

    database:
    # -- The type of database to use. (mysql, postgres)
    type: "mysql"
    mysql:
      deploy: true
      config:
        name: "mysql-name"
        user: "mysql-user"
        password: "mysql-password"
        host: "mysql-host"
        port: 3306
        max_connections: 100
        stale_timeout: 300
      deployConfig:
        image:
          repository: mysql
          tag: 8.0.39
        storage:
          className:
          capacity: 5Gi
        deployment:
          strategy:
          resources:
        service:
          type: ClusterIP
    postgres:
      config:
        name: '${POSTGRES_DBNAME:-rag_flow}'
        user: '${POSTGRES_USER:-rag_flow}'
        password: '${POSTGRES_PASSWORD:-infini_rag_flow}'
        host: '${POSTGRES_HOST:-postgres}'
        port: 5432
        max_connections: 100
        stale_timeout: 30

  oauth:
    oauth2:
      display_name: "OAuth2"
      client_id: "your_client_id"
      client_secret: "your_client_secret"
      authorization_url: "https://your-oauth-provider.com/oauth/authorize"
      token_url: "https://your-oauth-provider.com/oauth/token"
      userinfo_url: "https://your-oauth-provider.com/oauth/userinfo"
      redirect_uri: "https://your-app.com/v1/user/oauth/callback/oauth2"
    oidc:
      display_name: "OIDC"
      client_id: "your_client_id"
      client_secret: "your_client_secret"
      issuer: "https://your-oauth-provider.com/oidc"
      scope: "openid email profile"
      redirect_uri: "https://your-app.com/v1/user/oauth/callback/oidc"
    github:
      type: "github"
      icon: "github"
      display_name: "Github"
      client_id: "your_client_id"
      client_secret: "your_client_secret"
      redirect_uri: "https://your-app.com/v1/user/oauth/callback/github"

  authentication:
    client:
      switch: false
      http_app_key:
      http_secret_key:
    site:
      switch: false
    permission:
      switch: false
      component: false
      dataset: false

  user_default_llm:
    factory: 'Tongyi-Qianwen'
    api_key: 'sk-xxxxxxxxxxxxx'
    base_url: ''
    default_models:
      chat_model: 'qwen-plus'
      embedding_model: 'BAAI/bge-large-zh-v1.5@BAAI'
      rerank_model: ''
      asr_model: ''
      image2text_model: ''

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
